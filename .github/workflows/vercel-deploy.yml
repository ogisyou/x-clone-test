name: Firebase Functions と Vercel のデプロイ

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Node.js のセットアップ
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: 依存関係のインストール
        run: npm ci

      - name: Firebase CLI のインストール
        run: npm install -g firebase-tools

      - name: Firebase Functions のビルド
        run: |
          cd functions
          npm ci
          npm run build

      - name: Firebase Functions のデプロイ
        run: firebase deploy --only functions --token "${{ secrets.FIREBASE_TOKEN }}"
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}

      - name: Vercel CLI のインストール
        run: npm i -g vercel

      - name: Vercel へのデプロイ
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        run: |
          vercel pull --yes --environment=production --token $VERCEL_TOKEN
          vercel build --prod --token $VERCEL_TOKEN
          DEPLOYMENT_URL=$(vercel deploy --prebuilt --prod --token $VERCEL_TOKEN)
          echo "デプロイメント URL: $DEPLOYMENT_URL"

      - name: デプロイメントチェック
        run: |
          echo "チェックする URL: $DEPLOYMENT_URL"
          HTTP_RESPONSE=$(curl -sS -o /dev/null -w "%{http_code}" $DEPLOYMENT_URL)
          echo "HTTP ステータスコード: $HTTP_RESPONSE"
          if [ $HTTP_RESPONSE = "200" ] || [ $HTTP_RESPONSE = "404" ]; then
            echo "デプロイメントが成功しました。ステータスコード: $HTTP_RESPONSE"
          else
            echo "デプロイメントが失敗しました。ステータスコード: $HTTP_RESPONSE"
            curl -sS $DEPLOYMENT_URL
            exit 1
          fi