name: Deploy Functions and Vercel

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Notify on Push
        run: echo "ワークフローが git push によってトリガーされました！"

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-node-

      - name: Install root dependencies
        run: npm ci

      - name: Build Next.js app
        run: npm run build:next
        env:
          CI: true

      - name: List build output
        run: ls -R .next
     
      - name: Show Next.js build logs
        run: cat .next/build-manifest.json

      - name: Install Functions dependencies
        run: |
          cd functions
          npm ci

      - name: Build Functions
        run: npm run build:functions

      - name: Deploy Firebase Functions
        uses: w9jds/firebase-action@master
        with:
          args: deploy --only functions --project default
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}

      - name: Deploy to Vercel
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        run: |
          npx vercel pull --yes --environment=production --token $VERCEL_TOKEN
          npx vercel build --prod --token $VERCEL_TOKEN
          DEPLOYMENT_URL=$(npx vercel deploy --prebuilt --prod --token $VERCEL_TOKEN)
          echo "DEPLOYMENT_URL=$DEPLOYMENT_URL" >> $GITHUB_ENV
          echo "デプロイメントURL: $DEPLOYMENT_URL"

      - name: Check deployment
        run: |
          if [ -z "$DEPLOYMENT_URL" ]; then
            echo "エラー: デプロイメントURLが設定されていません"
            exit 1
          fi
          echo "チェックするURL: $DEPLOYMENT_URL"
          HTTP_STATUS=$(curl -o /dev/null -s -w "%{http_code}\n" $DEPLOYMENT_URL)
          echo "HTTP ステータスコード: $HTTP_STATUS"
          if [ $HTTP_STATUS = "200" ] || [ $HTTP_STATUS = "404" ]; then
            echo "デプロイメントが成功しました。ステータスコード: $HTTP_STATUS"
          else
            echo "デプロイメントが失敗しました。ステータスコード: $HTTP_STATUS"
            exit 1
          fi